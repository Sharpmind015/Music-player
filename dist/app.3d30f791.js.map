{"version":3,"sources":["js/modules/song.js","js/modules/playinfo.js","js/modules/trackbar.js","js/modules/playlist.js","app.js"],"names":["songList","title","artist","url","cover","playInfo","musicCoverEl","document","querySelector","musicTitleEl","musicArtistEl","audioEl","buttonShuffleEl","buttonPrevEl","buttonPlayEl","buttonNextEl","buttonRepeatEl","state","isPlaying","currentlyPlayingIndex","isShuffled","isRepeated","loadButton","element","classList","add","remove","togglePlayPause","firstElementChild","className","setState","obj","render","songMove","getRandomIndex","play","handlePlay","paused","pause","handleNext","length","handlePrev","handleShuffle","handleRepeat","console","log","src","innerText","loadSongDetails","Math","floor","random","init","addEventListener","trackBar","trackContainerEl","trackBarEl","currentTime","totalTime","fillWidth","setProgress","e","clickX","offsetX","width","clientWidth","duration","handleEnd","style","srcElement","playList","musicListEl","menuBtn","sideBar","markup","forEach","song","index","innerHTML","handleClick","target","matches","Number","id","listeners","toggle","window"],"mappings":"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","file":"app.3d30f791.js","sourceRoot":"..\\src","sourcesContent":["export const songList = [\r\n  {\r\n    title: \"Element\",\r\n    artist: \"Kendrick Lamar\",\r\n    url: \"music/Kendrick/ELEMENT\",\r\n    cover: \"music/Kendrick/cover\"\r\n  },\r\n  {\r\n    title: \"Shea Butter Baby\",\r\n    artist: \"Ari Lennox ft. J.cole\",\r\n    url: \"music/J.cole/Shea Butter Baby\",\r\n    cover: \"music/J.cole/cover\"\r\n  },\r\n  {\r\n    title: \"Wishing Well\",\r\n    artist: \"Juice Wrld\",\r\n    url: \"music/Juice Wrld/Wishing Well\",\r\n    cover: \"music/Juice Wrld/cover\"\r\n  },\r\n  {\r\n    title: \"Topanga\",\r\n    artist: \"Trippie Redd\",\r\n    url: \"music/Trippie Redd/Topanga\",\r\n    cover: \"music/Trippie Redd/cover\"\r\n  },\r\n  {\r\n    title: \"NO BYSTANDERS\",\r\n    artist: \"Travis Scott\",\r\n    url: \"music/Travis Scott/NO BYSTANDERS\",\r\n    cover: \"music/Travis Scott/cover\"\r\n  },\r\n  {\r\n    title: \"Moonlight\",\r\n    artist: \"XXXtentacion\",\r\n    url: \"music/XXXtentacion/Moonlight\",\r\n    cover: \"music/XXXtentacion/cover\"\r\n  },\r\n  {\r\n    title: \"Gunna\",\r\n    artist: \"Gunna ft. Young thug & Wheezy\",\r\n    url: \"music/Gunna/3 Headed Snake\",\r\n    cover: \"music/Gunna/cover\"\r\n  },\r\n  {\r\n    title: \" Praise the Lord (Da Shine)\",\r\n    artist: \"A$AP Rocky ft. Skepta\",\r\n    url: \"music/A$AP/Praise the Lord (Da Shine)\",\r\n    cover: \"music/A$AP/cover\"\r\n  },\r\n  {\r\n    title: \"Facts\",\r\n    artist: \"Kanye West\",\r\n    url: \"music/Kanye West/Facts (Charlie Heat Version)\",\r\n    cover: \"music/Kanye West/Cover\"\r\n  },\r\n  {\r\n    title: \"Onyeka\",\r\n    artist: \"Burna boy\",\r\n    url: \"music/Burna boy/Onyeka\",\r\n    cover: \"music/Burna boy/cover\"\r\n  },\r\n  {\r\n    title: \"No More Parties\",\r\n    artist: \"Coi Leray\",\r\n    url: \"music/Coi Leray/No More Parties\",\r\n    cover: \"music/Coi Leray/cover\"\r\n  },\r\n  {\r\n    title: \"10 Freaky Girls\",\r\n    artist: \"Metro Boomin\",\r\n    url: \"music/Metro Boomin/10 Freaky Girls\",\r\n    cover: \"music/Metro Boomin/cover\"\r\n  },\r\n  {\r\n    title: \"Y.M.C.A.\",\r\n    artist: \"Village People\",\r\n    url: \"music/Village People/Y.M.C.A.\",\r\n    cover: \"music/Village People/cover\"\r\n  },\r\n  {\r\n    title: \"Nuketown\",\r\n    artist: \"Skimask the Slump God\",\r\n    url: \"music/Skimask/Nuketown\",\r\n    cover: \"music/Skimask/cover\"\r\n  },\r\n  {\r\n    title: \"Circle of bosses\",\r\n    artist: \"Young thug ft. Quavo\",\r\n    url: \"music/Young Thug/Circle of bosses\",\r\n    cover: \"music/Young Thug/cover\"\r\n  },\r\n  {\r\n    title: \"No Permission\",\r\n    artist: \"Nasty C ft. Runtown\",\r\n    url: \"music/Nasty C/No Permission\",\r\n    cover: \"music/Nasty C/cover\"\r\n  }\r\n];\r\n","import { songList } from \"./song.js\";\r\n\r\n// Playinfo module //IIFE\r\nconst playInfo = (() => {\r\n  //cache the DOM\r\n  const musicCoverEl = document.querySelector(\"#js-music-cover\"),\r\n    musicTitleEl = document.querySelector(\"#js-music-title\"),\r\n    musicArtistEl = document.querySelector(\"#js-music-artist\"),\r\n    audioEl = document.querySelector(\"#js-audio\"),\r\n    buttonShuffleEl = document.querySelector(\"#js-button-shuffle\"),\r\n    buttonPrevEl = document.querySelector(\"#js-button-prev\"),\r\n    buttonPlayEl = document.querySelector(\"#js-button-play\"),\r\n    buttonNextEl = document.querySelector(\"#js-button-next\"),\r\n    buttonRepeatEl = document.querySelector(\"#js-button-repeat\");\r\n\r\n  // state\r\n  const state = {\r\n    isPlaying: false,\r\n    currentlyPlayingIndex: 0,\r\n    isShuffled: false,\r\n    isRepeated: false\r\n  };\r\n\r\n  //loads song details to the DOM\r\n  const loadSongDetails = state => {\r\n    musicCoverEl.src = `${songList[state.currentlyPlayingIndex].cover}.jpg`;\r\n    audioEl.src = `${songList[state.currentlyPlayingIndex].url}.mp3`;\r\n    musicTitleEl.innerText = songList[state.currentlyPlayingIndex].title;\r\n    musicArtistEl.innerText = songList[state.currentlyPlayingIndex].artist;\r\n  };\r\n  // loads music control button\r\n  const loadButton = (state, element) => {\r\n    if (state) {\r\n      element.classList.add(\"is-active\");\r\n    } else {\r\n      element.classList.remove(\"is-active\");\r\n    }\r\n  };\r\n  // switches button and music cover image to play or pause mode based on playing state\r\n  const togglePlayPause = () => {\r\n    if (state.isPlaying) {\r\n      buttonPlayEl.firstElementChild.className = \"fa fa-pause\";\r\n      musicCoverEl.classList.add(\"is-active\");\r\n    } else {\r\n      buttonPlayEl.firstElementChild.className = \"fa fa-play\";\r\n      musicCoverEl.classList.remove(\"is-active\");\r\n    }\r\n  };\r\n  // sets state\r\n  const setState = obj => {\r\n    state.isPlaying = obj.isPlaying;\r\n    state.currentlyPlayingIndex = obj.currentlyPlayingIndex;\r\n    render();\r\n  };\r\n\r\n  // changes song either forwards or backwards\r\n  const songMove = () => {\r\n    if (state.isShuffled) {\r\n      setState({ isPlaying: true, currentlyPlayingIndex: getRandomIndex() });\r\n    } else {\r\n      setState({\r\n        isPlaying: true,\r\n        currentlyPlayingIndex: currentlyPlayingIndex\r\n      });\r\n    }\r\n    render();\r\n    audioEl.play();\r\n  };\r\n  // plays or pauses song\r\n  const handlePlay = () => {\r\n    state.isPlaying = !state.isPlaying;\r\n    togglePlayPause();\r\n    return audioEl.paused ? audioEl.play() : audioEl.pause();\r\n  };\r\n  // moves song forwards\r\n  const handleNext = () => {\r\n    currentlyPlayingIndex =\r\n      state.currentlyPlayingIndex === songList.length - 1\r\n        ? 0\r\n        : state.currentlyPlayingIndex + 1;\r\n    songMove();\r\n  };\r\n  // moves song backwards\r\n  const handlePrev = () => {\r\n    currentlyPlayingIndex =\r\n      state.currentlyPlayingIndex === 0\r\n        ? songList.length - 1\r\n        : state.currentlyPlayingIndex - 1;\r\n    songMove();\r\n  };\r\n  //shuffles song\r\n  const handleShuffle = () => {\r\n    state.isShuffled = !state.isShuffled;\r\n    loadButton(state.isShuffled, buttonShuffleEl);\r\n  };\r\n  //repeats song\r\n  const handleRepeat = () => {\r\n    state.isRepeated = !state.isRepeated;\r\n    loadButton(state.isRepeated, buttonRepeatEl);\r\n  };\r\n\r\n  //renders playinfo module to the DOM\r\n  const render = () => {\r\n    console.log(songList);\r\n    loadSongDetails(state);\r\n    togglePlayPause();\r\n    loadButton(state.isShuffled, buttonShuffleEl);\r\n  };\r\n\r\n  //sets up even listseners for the play info module\r\n  const listeners = () => {\r\n    buttonPlayEl.addEventListener(\"click\", handlePlay);\r\n    buttonNextEl.addEventListener(\"click\", handleNext);\r\n    buttonPrevEl.addEventListener(\"click\", handlePrev);\r\n    buttonShuffleEl.addEventListener(\"click\", handleShuffle);\r\n    buttonRepeatEl.addEventListener(\"click\", handleRepeat);\r\n  };\r\n\r\n  //initialize module\r\n  const init = () => {\r\n    render();\r\n    listeners();\r\n  };\r\n\r\n  //Utilities\r\n  const getRandomIndex = () => {\r\n    return Math.floor(Math.random() * songList.length);\r\n  };\r\n  return {\r\n    init,\r\n    handleNext,\r\n    setState,\r\n    state\r\n  };\r\n})();\r\n\r\nexport default playInfo;\r\n","import playInfo from \"./playinfo.js\";\r\n\r\n// IIFE for trackbar module\r\nconst trackBar = (() => {\r\n  // cache the DOM\r\n  const trackContainerEl = document.querySelector(\"#js-track-container\"),\r\n    audioEl = document.querySelector(\"#js-audio\"),\r\n    trackBarEl = document.querySelector(\"#js-track-bar\");\r\n  //state\r\n  const state = {\r\n    currentTime: 0,\r\n    totalTime: 0,\r\n    fillWidth: 0\r\n  };\r\n  // sets music progress\r\n  function setProgress(e) {\r\n    var clickX = e.offsetX;\r\n    var width = this.clientWidth;\r\n    var duration = audioEl.duration;\r\n    audioEl.currentTime = clickX / width * duration;\r\n  }\r\n  //handles the end of a song\r\n  var handleEnd = () => {\r\n    if (state.isRepeated) {\r\n      setState({\r\n        isPlaying: true,\r\n        currentlyPlayingIndex: state.currentlyPlayingIndex\r\n      });\r\n      audioEl.play();\r\n    } else {\r\n      playInfo.handleNext();\r\n    }\r\n  };\r\n  // renders to the DOM\r\n  const render = () => {\r\n    trackBarEl.style.width = `${state.fillWidth}%`;\r\n  };\r\n  // sets state and renders to the DOM\r\n  const setState = obj => {\r\n    const { duration, currentTime } = obj;\r\n    state.currentTime = currentTime;\r\n    state.totalTime = duration;\r\n    state.fillWidth = state.currentTime / state.totalTime * 100;\r\n    render();\r\n  };\r\n  //sets up event listeners\r\n  var listeners = () => {\r\n    audioEl.addEventListener(\"timeupdate\", e => {\r\n      setState(e.srcElement);\r\n    });\r\n    audioEl.addEventListener(\"ended\", handleEnd);\r\n    trackContainerEl.addEventListener(\"click\", setProgress);\r\n  };\r\n  // initialize module\r\n  const init = () => {\r\n    render();\r\n    listeners();\r\n  };\r\n\r\n  return {\r\n    init\r\n  };\r\n})();\r\n\r\nexport default trackBar;\r\n","import { songList } from \"./song.js\";\r\nimport playInfo from \"./playinfo.js\";\r\n\r\nconst playList = (() => {\r\n  // caches the DOM\r\n  const musicListEl = document.querySelector(\"#js-music-list\"),\r\n    menuBtn = document.querySelector(\"#js-menu-btn\"),\r\n    sideBar = document.querySelector(\"#js-sidebar\");\r\n  // renders to the DOM\r\n  const render = () => {\r\n    let markup = \"\";\r\n    songList.forEach((song, index) => {\r\n      markup += `\r\n    <li class = \"music-list-item ${index ===\r\n    playInfo.state.currentlyPlayingIndex\r\n      ? \" is-active\"\r\n      : \"\"}\" id=\"${index}\">\r\n      <img src= \"${songList[index]\r\n        .cover}.jpg\" alt=\"\" class=\"music-list-image\" id=\"${index}\" />\r\n      <h6 class=\"music-list-title\" id=\"${index}\">${songList[index].title}</h6>\r\n    </li>`;\r\n    });\r\n    musicListEl.innerHTML = markup;\r\n  };\r\n  //handles the playlist items click event\r\n  const handleClick = e => {\r\n    if (\r\n      (e.target && e.target.matches(\".music-list-item\")) ||\r\n      e.target.matches(\".music-list-image\") ||\r\n      e.target.matches(\".music-list-title\")\r\n    ) {\r\n      audioEl.duration = 0;\r\n      playInfo.setState({\r\n        isPlaying: true,\r\n        currentlyPlayingIndex: Number(e.target.id)\r\n      });\r\n      audioEl.play();\r\n      render();\r\n    }\r\n  };\r\n\r\n  // sets up event listeners\r\n  const listeners = () => {\r\n    menuBtn.addEventListener(\"click\", e => {\r\n      sideBar.classList.toggle(\"is-open\");\r\n      menuBtn.classList.toggle(\"is-open\");\r\n    });\r\n    musicListEl.addEventListener(\"click\", handleClick);\r\n  };\r\n\r\n  const init = () => {\r\n    render();\r\n    listeners();\r\n  };\r\n\r\n  return {\r\n    init,\r\n    render,\r\n    listeners\r\n  };\r\n})();\r\n\r\nexport default playList;\r\n","import playInfo from \"./js/modules/playinfo.js\";\r\nimport trackBar from \"./js/modules/trackbar.js\";\r\nimport playList from \"./js/modules/playlist.js\";\r\n\r\nwindow.addEventListener(\"load\", () => {\r\n  console.log(343);\r\n  playInfo.init();\r\n  trackBar.init();\r\n  playList.init();\r\n});\r\n"]}